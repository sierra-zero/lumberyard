{
    "platform"      : "win_x64_vs2017",
    "display_name"  : "x64 vs2017",
    "hosts"         : "win32",
    "aliases"       : "msvc,win",
    "has_server"    : true,
    "has_tests"     : true,
    "enabled"       : true,
    "needs_java"    : false,

    "modules"       : [
        "platforms/compile_settings_cryengine",
        "platforms/compile_settings_msvc",
        "platforms/compile_settings_windows",
        "platforms/platform_impl_win_x64",
        "platforms/platform_impl_win_x64_vs2017",
        "platforms/platform_settings_win_x64_vs2017"
    ],

    "includes": [
        "common.json",
        "common.msvc.json",
        "common.windows.json",
        "common.win_msvc.json"
    ],

    "attributes"    : {
        "is_windows"            : true,
        "default_folder_name"   : "Bin64vc141",
        "legacy_platform_name"  : "win64_vs2017",
        "compiler"              : "vc141",
        "msvs": {
            "msvs_ver"          : "15",
            "prefix"            : "win",
            "compat_toolsets"   : ["v141"],
            "toolset_name"      : "x64",
            "format_ver"        : "12.00",
            "vs_name"           : "Visual Studio 2017",
            "vs_solution_key"   : "vs2017_solution_name",
            "command"           : "msvs_2017"
        },
        "sa_capability": {
            "key"               : "vc141",
            "description"       : "Visual Studio 2017"
        },
        "qt_supported"          : true,
        "qt_platform_dir"       : "msvc2019_64",
        "qtga_subfolders"       : [
            "win32/vc140/qtga.dll",
            "win32/vc140/qtgad.dll",
            "win32/vc140/qtgad.pdb"
        ]
    },
    "settings"      : {
        "Visual Studio 2017 Options" :
        [
            {
                "long_form"         : "--win-vs2017-vswhere-args",
                "attribute"         : "win_vs2017_vswhere_args",
                "default_value"     : "-version [15.9.28307.770,16.0)",
                "description"       : "The arguments to pass to vswhere when locating vs2017 executables. The default maximum is all future versions of VS2017 (beyond the minimum). The default minimum is the last known ABI incompatiblity for Lumberyard builds."
            },
            {
                "long_form"         : "--win-vs2017-winkit",
                "attribute"         : "win_vs2017_winkit",
                "default_value"     : "",
                "description"       : "The windows kit that vs2017 builds windows targets against"
            },
            {
                "long_form"         : "--win-vs2017-vcvarsall-args",
                "attribute"         : "win_vs2017_vcvarsall_args",
                "default_value"     : "",
                "description"       : "Additional arguments to pass to vcvarsall.bat"
            },
            {
                "long_form"         : "--vs2017-solution-name",
                "attribute"         : "vs2017_solution_name",
                "default_value"     : "LumberyardSDK_vs2017",
                "description"       : "The name of the generated VS2017 solution"
            },
            {
                "long_form"         : "--generate-vs2017-projects-automatically",
                "attribute"         : "generate_vs2017_projects_automatically",
                "default_value"     : "True",
                "description"       : "Automatically generate Visual Studio 2017 Projects/Solutions during every configure"
            }
        ]
    },
    "env"           : {
        "DEFINES": [
            "_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING",
            "_ENABLE_EXTENDED_ALIGNED_STORAGE"
        ],
        "CFLAGS,CXXFLAGS": [
            "/FS",
            "/std:c++17",
            "/Zc:__cplusplus",
            "/experimental:external", # Turns on "external" headers feature for MSVC compilers
            "/external:W0", # Set warning level in external headers to 0. This is used to suppress warnings 3rdParty libraries which uses the "system_includes" option in their json configuration
            "/wd4193" # Temporary workaround for the /experiment:external feature generating warning C4193: #pragma warning(pop): no matching '#pragma warning(push)'
        ]
    },
    "env/performance": {
        "?enable_link_time_optimization?:ARFLAGS": [
            "/LTCG"
        ]
    },
    "env/release": {
        "?enable_link_time_optimization?:ARFLAGS": [
            "/LTCG"
        ]
    }
}
